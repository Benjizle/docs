@startuml
' declate title
title DFSP1 sends a Prepare Transfer request to DFSP2

' declare actors
actor DFSP1
actor DFSP2
boundary "ML API Adapter" as API
collections "Prepare-Topic-handler-dfsp1" as TOPIC_PREPARE_DFSP1
control "Prepare Event Handler" as PREP_HANDLER
collections "Position-Topic-handler-dfsp1" as TOPIC_POSITION_DFSP1
control "Position Event Handler" as POS_HANDLER
collections "Transfer-Topic-handler" as TOPIC_TRANSFERS
control "Transfer Event Handler" as TRANS_HANDLER
collections "Notification-Topic-handler" as TOPIC_NOTIFICATIONS
control "ML API Notification Event Handler" as NOTIFY_HANDLER
boundary "ML API Adapter" as API
entity "Position DAO" as POS_DAO
entity "Event DAO" as EVENT_DAO
entity "Transfer DAO" as TRANS_DAO
entity "Notification DAO" as NOTIFY_DAO
database "Central Store" as DB

' start flow
alt DFSP1 sends a Prepare Transfer request to DFSP2
    activate API
    DFSP1 -> API: POST - http://transfers
    API -> TOPIC_PREPARE_DFSP1: Routes & Publishes Prepare event for DFSP1
    TOPIC_PREPARE_DFSP1 <-> TOPIC_PREPARE_DFSP1: Ensures that event is replicated as configured (ACKS=all)
    TOPIC_PREPARE_DFSP1 -> API: Responds replication acknoledgements have been received
    API -> DFSP1: Respond HTTP - 202 (Accepted)
    deactivate API
    activate PREP_HANDLER
    TOPIC_PREPARE_DFSP1 -> PREP_HANDLER: Consumes Prepare event message for DFSP1
    PREP_HANDLER <-> PREP_HANDLER: Validates from - DFSP1
    PREP_HANDLER <-> PREP_HANDLER: Validates to - DFSP2
    PREP_HANDLER <-> PREP_HANDLER: Validates message signature
    PREP_HANDLER -> TOPIC_POSITION_DFSP1: Routes & Publishes Position event for DFSP1
    deactivate PREP_HANDLER
    activate POS_HANDLER
    TOPIC_POSITION_DFSP1 -> POS_HANDLER: Consumes Position event message for DFSP1
    POS_HANDLER -> EVENT_DAO: Request to persist event information
    EVENT_DAO <-> DB: Persist event information
    EVENT_DAO -> POS_HANDLER: return success
    POS_HANDLER <-> DB: Retrieves latest position from DB for DFSP1
    POS_HANDLER <-> POS_HANDLER: Calculates latest position by decrementing transfer for prepare
    POS_HANDLER -> POS_DAO: Request to persist latest position for DFSP1
    POS_DAO <-> DB: Persists latest position to DB for DFSP1
    POS_DAO -> POS_HANDLER: return success
    POS_HANDLER -> TOPIC_TRANSFERS: Publishes Transfer event
    deactivate POS_HANDLER
    deactivate TRANS_HANDLER
    TOPIC_TRANSFERS -> TRANS_HANDLER: Consumes Transfer event
    TRANS_HANDLER -> TRANS_DAO: Request to Transfer status to DB
    TRANS_DAO <-> DB: return success
    TRANS_DAO -> TRANS_HANDLER: Persists Transfer status to DB
    TRANS_HANDLER -> TOPIC_NOTIFICATIONS: Publishes Notifications event for DFSP1
    TRANS_HANDLER -> TOPIC_NOTIFICATIONS: Publishes Notifications event for DFSP2
    deactivate TRANS_HANDLER
    activate NOTIFY_HANDLER
    TOPIC_NOTIFICATIONS -> NOTIFY_HANDLER: Consumes Notifications event
    NOTIFY_HANDLER <-> NOTIFY_DAO: Fetches Notifications details for DFSP1
    NOTIFY_HANDLER -> DFSP1: HTTP Callback with Prepare result to DFSP1
    NOTIFY_HANDLER <-> NOTIFY_DAO: Fetches Notifications details for DFSP2
    NOTIFY_HANDLER -> DFSP2: HTTP Callback with Prepare result to DFSP2
    deactivate NOTIFY_HANDLER
else Prepare Validation Failure
    activate API
    DFSP1 -> API: POST - http://transfers
    API -> TOPIC_PREPARE_DFSP1: Routes & Publishes Prepare event for DFSP1
    TOPIC_PREPARE_DFSP1 <-> TOPIC_PREPARE_DFSP1: Ensures that event is replicated as configured (ACKS=all)
    TOPIC_PREPARE_DFSP1 -> API: Responds replication acknoledgements have been received
    API -> DFSP1: Respond HTTP - 202 (Accepted)
    deactivate API
    activate PREP_HANDLER
    TOPIC_PREPARE_DFSP1 -> PREP_HANDLER: Consumes Prepare event message for DFSP1
    PREP_HANDLER <-> PREP_HANDLER: Validates from - DFSP1
    PREP_HANDLER <-> PREP_HANDLER: Validates to - DFSP2
    PREP_HANDLER <-> PREP_HANDLER: Validates message signature
    note right of PREP_HANDLER #red: Validation failure!
    PREP_HANDLER -> TOPIC_NOTIFICATIONS: Publishes Notification (failure) event for DFSP1
    deactivate PREP_HANDLER
    activate NOTIFY_HANDLER
    TOPIC_NOTIFICATIONS -> NOTIFY_HANDLER: Consumes Notifications event
    NOTIFY_HANDLER <-> NOTIFY_DAO: Fetches Notifications details for DFSP1
    NOTIFY_HANDLER -> DFSP1: HTTP Callback with Prepare result to DFSP1
    NOTIFY_HANDLER <-> NOTIFY_DAO: Fetches Notifications details for DFSP2
    NOTIFY_HANDLER -> DFSP2: HTTP Callback with Prepare result to DFSP2
    deactivate NOTIFY_HANDLER
else Prepare Position Failure
    activate API
    DFSP1 -> API: POST - http://transfers
    API -> TOPIC_PREPARE_DFSP1: Routes & Publishes Prepare event for DFSP1
    TOPIC_PREPARE_DFSP1 <-> TOPIC_PREPARE_DFSP1: Ensures that event is replicated as configured (ACKS=all)
    TOPIC_PREPARE_DFSP1 -> API: Responds replication acknoledgements have been received
    API -> DFSP1: Respond HTTP - 202 (Accepted)
    deactivate API
    activate PREP_HANDLER
    TOPIC_PREPARE_DFSP1 -> PREP_HANDLER: Consumes Prepare event message for DFSP1
    PREP_HANDLER <-> PREP_HANDLER: Validates from - DFSP1
    PREP_HANDLER <-> PREP_HANDLER: Validates to - DFSP2
    PREP_HANDLER <-> PREP_HANDLER: Validates message signature
    PREP_HANDLER -> TOPIC_POSITION_DFSP1: Routes & Publishes Position event for DFSP1
    deactivate PREP_HANDLER
    activate POS_HANDLER
    TOPIC_POSITION_DFSP1 -> POS_HANDLER: Consumes Position event message for DFSP1
    POS_HANDLER -> EVENT_DAO: Request to persist event information
    EVENT_DAO <-> DB: Persist event information
    EVENT_DAO -> POS_HANDLER: return success
    POS_HANDLER <-> DB: Retrieves latest position from DB for DFSP1
    POS_HANDLER <-> POS_HANDLER: Calculates latest position by decrementing transfer for prepare
    note right of PREP_HANDLER #red: Validation failure!
    POS_HANDLER -> TOPIC_NOTIFICATIONS: Publishes Notifications (Failure) event for DFSP2
    deactivate POS_HANDLER
    activate NOTIFY_HANDLER
    TOPIC_NOTIFICATIONS -> NOTIFY_HANDLER: Consumes Notifications event
    NOTIFY_HANDLER <-> NOTIFY_DAO: Fetches Notifications details for DFSP1
    NOTIFY_HANDLER -> DFSP1: HTTP Callback with Prepare result to DFSP1
end
@enduml
